
--- PREFACE:
-- 
-- ATS - Active Thermal Solution
-- This program control fan for RockPro64, or other boards
--
-- Nota :
--      Temperature can be more than real because of self heating..

----------------------------------------------------------------------
-- Copyright (c) 2018 Carlos Domingues, aka tuxd3v <tuxd3v@sapo.pt>
-- see licence..
-- Use at your own risk..

-- Nota:
--     Since many people have its own thermal Solution, and there are a so great variation in Temperature/Humidity around the globe,
--     Its virtually impossible to create a solution to fit all..

--[[ By Experience, without Underclock, with cpufreq Scalling 'Ondemand',
     And with all CPUs at 100%, the temperature should not grow more than ~57/58C,
     But it depends of the HeatSink/Fan characteristics/Environment around..

     Nota:
         For Safety Reasons,
         IF **there is a fail to read, any one of the Thermal temps**,
         ATS will assign 'MAX_CONTINUOUS_THERMAL_TEMP', playing on the safe side..

         In the absence of proper Active Thermal Solution, to cool down( weak or dead fan? ),
         ATS will adjust temps only until 'ABSOLUTE_MAX_THERMAL_TEMP' were reached, were then, it Shutdown in 10s( for safety reasons.. )
]]

---- Tests Done
--

--[[ This tool was tested 24x7, for more than 5 months, under Full Load, with:
     < Minimal Debian Strech release >, and also < Ubuntu bionic >, both by ayufan,
     But it should work with DietPi,Armbian, ArchLinux, etc
     In next releases SysVinit based OSes, such Devuan ASCII should also work..

     Adjust Values Bellow, to Get best Conditions for your System combination( heatsink/Fan specs.. )
]]

--- Defenition Boards,
--  You can create more Defenitions, at the **End of File**, **Assign your to 'SYSTEM'**...see bellow

--  To add Line Comments,
--  just put "--" before the comment( like in this example )

--[[ 
    To add block Comments, just put text inside block,
    like in this example
]]

SYSTEM = {
	--- Board Specs..
	--
	BOARD = {
		-- Board Name	
		NAME	= "ROCKPRO64",
		-- CPU used on this Board
		CPU	= "RK3399",

		THERMAL	= {
			-- Thermal INPUT Ctrl Zones number( ie: it has CPU + GPU Thermal Controls.. 0 and 1 = 2 )
			NR	= 2;

			---  Assigning Locations for Control..
			--
			-- CPU Thermal Zone[ String ]
			0	= {
				--[[ Thermal Control Type:
					-- OnSystem Driver via SysFs export
					0 - SYSTEM_SYSFS
					-- OnBoard i2c chip sensor, no SysFs, no Driver */
					1 - ONBOARD_I2C
					-- OnBoard pwm GPIO Mapped, implicit resources for functionality, but No Driver, no SYSFS
					2 - ONBOARD_GPIO
					-- OnBoard GPIO Pin MApped, no resources for functionality, No Driver, no SYSFS, ( ie: BitBanging i2c,pwm )
					3 - FOREIGN_GPIO
				]]
				-- For now use only type 0( sysfs )
				TYPE	= 0;
				--[[ Direction of the Control Type:
					0 - OUTPUT
					1 - INPUT
				]]
				DIRECTION	= 1;
				NAME		= "/sys/class/thermal/thermal_zone0/temp"
			},
			-- GPU Thermal Zone[ String ]
			1	= {
				--[[ Thermal Control Type:
					-- OnSystem Driver via SysFs export
					0 - SYSTEM_SYSFS
					-- OnBoard i2c chip sensor, no SysFs, no Driver
					1 - ONBOARD_I2C
					-- OnBoard pwm GPIO Mapped, implicit resources for functionality, but No Driver, no SYSFS
					2 - ONBOARD_GPIO
					-- OnBoard GPIO Pin MApped, no resources for functionality, No Driver, no SYSFS, ( ie: BitBanging i2c,pwm )
					3 - FOREIGN_GPIO
				]]
				-- For now use only type 0( sysfs )
				TYPE	= 0;
				--[[ Direction of the Control Type:
					0 - OUTPUT
					1 - INPUT
				]]
				DIRECTION	= 1;
				NAME		= "/sys/class/thermal/thermal_zone1/temp"
			}
		},
		PWM		= {
			-- Pwm OutPut Ctrl Zones( ie: it has 1 PWM Controls.. )
			NR	= 1;
			0	= {
				--[[ Thermal Control Type:
					-- OnSystem Driver via SysFs export
					0 - SYSTEM_SYSFS
					-- OnBoard i2c chip sensor, no SysFs, no Driver
					1 - ONBOARD_I2C
					-- OnBoard pwm GPIO Mapped, implicit resources for functionality, but No Driver, no SYSFS
					2 - ONBOARD_GPIO
					-- OnBoard GPIO Pin MApped, no resources for functionality, No Driver, no SYSFS, ( ie: BitBanging i2c,pwm )
					3 - FOREIGN_GPIO
				]]
				-- For now use only type 0( sysfs )
				TYPE	= 0;
				--[[ Direction of the Control Type:
					0 - OUTPUT
					1 - INPUT
				]]
				DIRECTION	= 0;
				-- FAN Control[ String ]
				NAME		= "/sys/class/hwmon/hwmon0/pwm1";
				MAP_TO_THERMALID	= { 0;	1 }
			}
		}
	},

	--- Temperature Control Constants
	--
	-- Max Temperature Allowed for adjusting fan pwm( On this threshold, and above, fan is always on MaxValue )
	MAX_CONTINUOUS_THERMAL_TEMP	= 60,
	-- Min Temperature  threshold to activate/deactivate Fan
	MIN_CONTINUOUS_THERMAL_TEMP	= 40,


	--- PWM Parameters Constants
	--
	-- Adjust conform your Fan specs, some neds greater values, others work with less current( maximum pwm used by bellow described formula )
	MAX_PWM				= 255,
	-- Adjust conform your Fan specs, some neds greater values, others work with less current( minimum pwm used by bellow described formula )
	MIN_PWM				= 40,


	--- Fan Cycling ON/OFF [ boolean ]
	--
	-- true - Fan will be always on
	-- false - Fan will start/stop, cycling..
	ALWAYS_ON			= false,
	
	--- Description of Equation using Interpolated methods, do aquire range pwm values
	--
	-- Equation to get PWM, PWM( TEMP )
	--[[
		if( TEMP < MIN_CONTINUOUS_THERMAL_TEMP )
		then
			In this case fan will stop
			0
		else
			In this case fan will run, with the power resulting from equation described bellow :
			1) On active envelope( MIN_CONTINUOUS_THERMAL_TEMP <= TEMP < MAX_CONTINUOUS_THERMAL_TEMP )
			2) For situation were TEMP > MAX_CONTINUOUS_THERMAL_TEMP. pwm is Maximun, until ABSOLUTE_MAX_THERMAL reached,
			   were it will shutdown system..

			MIN_PWM + ( ( MAX_PWM - MIN_PWM )/( MAX_CONTINUOUS_THERMAL_TEMP -  MIN_CONTINUOUS_THERMAL_TEMP ) ) * ( TEMP - MIN_CONTINUOUS_THERMAL_TEMP )
		end
	]]
	-- Chose Fan Profile, this section...will be deleted in future ATS versions.., mantain values bellow
	--  0 - Smaller fan		{ ~40*40*10 mm taller, CFM < 4, 12v, ~0.1A, ~4000rpm max }
	--  1 - Talller fan options	{
	--					40*40*20mm ( CFM ~4-5, 12v, ~0.1A, ~5000rpm max ),
	--					40*40*10mm ( CFM >4, 12v, ~0.1A, >=5000rpm )
	--				}
	--  2 - Taller/Bigger, NAS Case fan( ~80*70*20mm, CFM 25.15 CFM, 12v, 0.10A )
	PROFILE_NAME			= "profile0",
	PROFILE_NR			= 0
}

--- Assign SYSTEM, to your Linux Board
--
--SYSTEM = ROCKPRO64
return SYSTEM
